// This file is auto-generated by @hey-api/openapi-ts

import {
	type Options,
	createClient,
	createConfig,
} from "@hey-api/client-axios";
import type {
	AddQuestionQuestionQuizSetIdPostData,
	AddQuestionQuestionQuizSetIdPostError,
	AddQuestionQuestionQuizSetIdPostResponse,
	CreateQuizSetQuizSetsPostData,
	CreateQuizSetQuizSetsPostError,
	CreateQuizSetQuizSetsPostResponse,
	DeleteQuizSetQuizSetsQuizSetIdDeleteData,
	DeleteQuizSetQuizSetsQuizSetIdDeleteError,
	DeleteQuizSetQuizSetsQuizSetIdDeleteResponse,
	GetGroupsByQuizSetIdGroupsQuizSetIdGetData,
	GetGroupsByQuizSetIdGroupsQuizSetIdGetError,
	GetGroupsByQuizSetIdGroupsQuizSetIdGetResponse,
	GetGroupsGroupsGetError,
	GetGroupsGroupsGetResponse,
	GetQuizSetQuizSetsQuizSetIdGetData,
	GetQuizSetQuizSetsQuizSetIdGetError,
	GetQuizSetQuizSetsQuizSetIdGetResponse,
	GetQuizSetsQuizSetsGetError,
	GetQuizSetsQuizSetsGetResponse,
	RegisterGroupGroupsQuizSetIdPostData,
	RegisterGroupGroupsQuizSetIdPostError,
	RegisterGroupGroupsQuizSetIdPostResponse,
	RegisterScoreGroupsGroupIdPutData,
	RegisterScoreGroupsGroupIdPutError,
	RegisterScoreGroupsGroupIdPutResponse,
} from "./types.gen";

const baseURL = import.meta.env.VITE_API_URL;

export const client = createClient(
	createConfig({
		baseURL: baseURL,
	}),
);

/**
 * Get Quiz Sets
 */
export const getQuizSetsQuizSetsGet = <ThrowOnError extends boolean = false>(
	options?: Options<unknown, ThrowOnError>,
) => {
	return (options?.client ?? client).get<
		GetQuizSetsQuizSetsGetResponse,
		GetQuizSetsQuizSetsGetError,
		ThrowOnError
	>({
		...options,
		url: "/quiz_sets",
	});
};

/**
 * Create Quiz Set
 */
export const createQuizSetQuizSetsPost = <ThrowOnError extends boolean = false>(
	options: Options<CreateQuizSetQuizSetsPostData, ThrowOnError>,
) => {
	return (options?.client ?? client).post<
		CreateQuizSetQuizSetsPostResponse,
		CreateQuizSetQuizSetsPostError,
		ThrowOnError
	>({
		...options,
		url: "/quiz_sets",
	});
};

/**
 * Get Quiz Set
 */
export const getQuizSetQuizSetsQuizSetIdGet = <
	ThrowOnError extends boolean = false,
>(
	options: Options<GetQuizSetQuizSetsQuizSetIdGetData, ThrowOnError>,
) => {
	return (options?.client ?? client).get<
		GetQuizSetQuizSetsQuizSetIdGetResponse,
		GetQuizSetQuizSetsQuizSetIdGetError,
		ThrowOnError
	>({
		...options,
		url: "/quiz_sets/{quiz_set_id}",
	});
};

/**
 * Delete Quiz Set
 */
export const deleteQuizSetQuizSetsQuizSetIdDelete = <
	ThrowOnError extends boolean = false,
>(
	options: Options<DeleteQuizSetQuizSetsQuizSetIdDeleteData, ThrowOnError>,
) => {
	return (options?.client ?? client).delete<
		DeleteQuizSetQuizSetsQuizSetIdDeleteResponse,
		DeleteQuizSetQuizSetsQuizSetIdDeleteError,
		ThrowOnError
	>({
		...options,
		url: "/quiz_sets/{quiz_set_id}",
	});
};

/**
 * Add Question
 */
export const addQuestionQuestionQuizSetIdPost = <
	ThrowOnError extends boolean = false,
>(
	options: Options<AddQuestionQuestionQuizSetIdPostData, ThrowOnError>,
) => {
	return (options?.client ?? client).post<
		AddQuestionQuestionQuizSetIdPostResponse,
		AddQuestionQuestionQuizSetIdPostError,
		ThrowOnError
	>({
		...options,
		url: "/question/{quiz_set_id}",
	});
};

/**
 * Get Groups
 */
export const getGroupsGroupsGet = <ThrowOnError extends boolean = false>(
	options?: Options<unknown, ThrowOnError>,
) => {
	return (options?.client ?? client).get<
		GetGroupsGroupsGetResponse,
		GetGroupsGroupsGetError,
		ThrowOnError
	>({
		...options,
		url: "/groups",
	});
};

/**
 * Get Groups By Quiz Set Id
 */
export const getGroupsByQuizSetIdGroupsQuizSetIdGet = <
	ThrowOnError extends boolean = false,
>(
	options: Options<GetGroupsByQuizSetIdGroupsQuizSetIdGetData, ThrowOnError>,
) => {
	return (options?.client ?? client).get<
		GetGroupsByQuizSetIdGroupsQuizSetIdGetResponse,
		GetGroupsByQuizSetIdGroupsQuizSetIdGetError,
		ThrowOnError
	>({
		...options,
		url: "/groups/{quiz_set_id}",
	});
};

/**
 * Register Group
 */
export const registerGroupGroupsQuizSetIdPost = <
	ThrowOnError extends boolean = false,
>(
	options: Options<RegisterGroupGroupsQuizSetIdPostData, ThrowOnError>,
) => {
	return (options?.client ?? client).post<
		RegisterGroupGroupsQuizSetIdPostResponse,
		RegisterGroupGroupsQuizSetIdPostError,
		ThrowOnError
	>({
		...options,
		url: "/groups/{quiz_set_id}",
	});
};

/**
 * Register Score
 */
export const registerScoreGroupsGroupIdPut = <
	ThrowOnError extends boolean = false,
>(
	options: Options<RegisterScoreGroupsGroupIdPutData, ThrowOnError>,
) => {
	return (options?.client ?? client).put<
		RegisterScoreGroupsGroupIdPutResponse,
		RegisterScoreGroupsGroupIdPutError,
		ThrowOnError
	>({
		...options,
		url: "/groups/{group_id}",
	});
};
